<% content_for :title, "Audition Requests" %>
<div class="w-full">
  <%= render partial: "shared/notice", locals: { notice: notice } %>
  <%= render partial: "shared/top_menu", locals: {
    breadcrumbs: [
      ["Productions", productions_path],
      [@production.name, production_path(@production)],
      ["Audition Requests", production_call_to_audition_audition_requests_path(@production, @call_to_audition)]
    ],
    text: @audition_request.person.stage_name,
    links: []
  } %>
  <div id="<%= dom_id @audition_request %>" class="w-full sm:w-auto my-5 space-y-5">
    <div class="flex flex-col sm:flex-row w-full gap-6">
      <div class="w-full sm:w-[60%] bg-black">
        <% if @person.resume.attached? %>
          <embed src="<%= url_for(@person.resume) %>" type="application/pdf" width="100%" height="600px" />
        <% end %>
      </div>
      <div class="w-full sm:w-[40%] flex flex-col">
        <% if @person.headshot.attached? %>
          <%= image_tag url_for(@person.headshot), class: "relative inline-block w-full" %>
        <% else %>
          <div class="relative inline-block h-12 w-12 rounded-full bg-gray-200">
            <svg class="absolute left-1/2 top-1/2 h-6 w-6 -translate-x-1/2 -translate-y-1/2 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z" />
            </svg>
          </div>
        <% end %>
        <div class="text-4xl font-bold mt-3"><%= @person.stage_name %></div>
        <div class="text-sm text-gray-600 mb-1">(<%= @person.pronouns %>)</div>
        <div class="text-md text-gray-500"><%= mail_to @person.email %></div>
        <div class="text-md text-gray-500"><%= @person.socials %></div>
        <div class="grid grid-cols-4 gap-0 ml-auto">
          <%
            [:unreviewed, :undecided, :accepted, :passed].each do |status|
              classes = "text-md px-5 py-2.5 text-center border border-gray-200"

              # Set the borders based on position in the list of statuses
              if status == :unreviewed
                classes += " rounded-l-lg"
              elsif status == :undecided
                classes += " border-l-0"
              elsif status == :accepted
                classes += " border-l-0"
              elsif status == :passed
                classes += " rounded-r-lg"
              end

              # Set the background color based on status
              if @audition_request.status == status.to_s
                classes += " bg-gradient-to-r from-pink-400 via-pink-500 to-pink-600 text-white"
              end
          %>
          <%= link_to status.capitalize, production_call_to_audition_audition_request_set_status_path(@production, @call_to_audition, @audition_request, status: status), class: classes, data: { turbo_method: :post } %>
        <% end %>
      </div>
    </div>
  </div>
</div>